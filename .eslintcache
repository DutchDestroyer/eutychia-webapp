[{"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\index.tsx":"1","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\reportWebVitals.ts":"2","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\App.tsx":"3","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\navigationlinks.ts":"4","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\LoginScreen\\index.tsx":"5","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ModifyExistingProjectScreen\\index.tsx":"6","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\OverviewScreen\\index.tsx":"7","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ProjectOverviewParticipantScreen\\index.tsx":"8","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\CreateNewProjectScreen\\index.tsx":"9","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\GenericTestScreen\\index.tsx":"10","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\store.ts":"11","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\configuration.ts":"12","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\login.ts":"13","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\index.ts":"14","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\login.ts":"15","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\api.ts":"16","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\login.ts":"17","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\base.ts":"18","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getTests.ts":"19","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getTests.ts":"20","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getTests.ts":"21","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getProjectsOfParticipant.ts":"22","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getProjectsOfParticipant.ts":"23","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getProjectsOfParticipant.ts":"24","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ProjectsOverviewParticipantScreen\\index.tsx":"25","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getTestsOfProjectParticipant.ts":"26","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getTestsOfProjectParticipant.ts":"27","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getTestsOfProjectParticipant.ts":"28","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allTestsOfProjectParticipant.ts":"29","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allTestsForResearcher.ts":"30","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\AllProjectsForParticipant.ts":"31","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allProjectsForParticipant.ts":"32"},{"size":672,"mtime":1612090419819,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":2254,"mtime":1613827254220,"results":"36","hashOfConfig":"34"},{"size":372,"mtime":1611405574565,"results":"37","hashOfConfig":"34"},{"size":2467,"mtime":1612705890032,"results":"38","hashOfConfig":"34"},{"size":126,"mtime":1612691271757,"results":"39","hashOfConfig":"34"},{"size":2924,"mtime":1613849264639,"results":"40","hashOfConfig":"34"},{"size":1232,"mtime":1613848455384,"results":"41","hashOfConfig":"34"},{"size":8199,"mtime":1613321968806,"results":"42","hashOfConfig":"34"},{"size":106,"mtime":1612691080340,"results":"43","hashOfConfig":"34"},{"size":1051,"mtime":1613848293384,"results":"44","hashOfConfig":"34"},{"size":3287,"mtime":1612705354407,"results":"45","hashOfConfig":"34"},{"size":724,"mtime":1612690856655,"results":"46","hashOfConfig":"34"},{"size":435,"mtime":1612705354345,"results":"47","hashOfConfig":"34"},{"size":259,"mtime":1612690591319,"results":"48","hashOfConfig":"34"},{"size":74296,"mtime":1612705354401,"results":"49","hashOfConfig":"34"},{"size":192,"mtime":1612086849068,"results":"50","hashOfConfig":"34"},{"size":1594,"mtime":1612705354371,"results":"51","hashOfConfig":"34"},{"size":188,"mtime":1612699232279,"results":"52","hashOfConfig":"34"},{"size":310,"mtime":1613298049808,"results":"53","hashOfConfig":"34"},{"size":388,"mtime":1613298049808,"results":"54","hashOfConfig":"34"},{"size":523,"mtime":1613826134153,"results":"55","hashOfConfig":"34"},{"size":389,"mtime":1613825725422,"results":"56","hashOfConfig":"34"},{"size":290,"mtime":1613826511062,"results":"57","hashOfConfig":"34"},{"size":2121,"mtime":1613829269119,"results":"58","hashOfConfig":"34"},{"size":583,"mtime":1613828760080,"results":"59","hashOfConfig":"34"},{"size":592,"mtime":1613828595222,"results":"60","hashOfConfig":"34"},{"size":324,"mtime":1613828870497,"results":"61","hashOfConfig":"34"},{"size":825,"mtime":1613829607774,"results":"62","hashOfConfig":"34"},{"size":356,"mtime":1613848969091,"results":"63","hashOfConfig":"34"},{"size":398,"mtime":1613849260750,"results":"64","hashOfConfig":"34"},{"size":398,"mtime":1613849260750,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1c61zi6",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\index.tsx",[],["132","133"],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\reportWebVitals.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\App.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\navigationlinks.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\LoginScreen\\index.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ModifyExistingProjectScreen\\index.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\OverviewScreen\\index.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ProjectOverviewParticipantScreen\\index.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\CreateNewProjectScreen\\index.tsx",["134"],"import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { api } from \"../../App\";\r\nimport { AccountDetailsAccountTypeEnum, CreateProject } from \"../../services/api\";\r\nimport { getTestsAction } from \"../../services/redux/actions/getTests\";\r\nimport { AppState } from \"../../services/redux/store\";\r\nimport { TestForAccount } from \"../../services/redux/types/getTests\";\r\nimport nl from \"../navigationlinks\";\r\n\r\ninterface IProjectTitle{\r\n    projectTitle: string\r\n  }\r\n\r\ninterface INewParticipant{\r\n  firstName: string,\r\n  lastName: string,\r\n  emailAddress: string,\r\n  isCorrect: Boolean\r\n}\r\n\r\nexport default function CreateNewProjectScreen(){\r\n    const loginData = useSelector((state: AppState) => state.login)\r\n    const allTests = useSelector((state: AppState) => state.getTests)\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const {register, handleSubmit, errors, reset} = useForm<IProjectTitle>();\r\n    const [hasTestsSeleted, setTestsSelected] = useState<Boolean>(true);\r\n    \r\n    const blankParticipant: INewParticipant = {\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        isCorrect: true,\r\n    }\r\n    const [participantState, setParticipant] = useState<INewParticipant[]>([\r\n        {...blankParticipant}\r\n    ]);\r\n\r\n    const checkboxChange = (test: TestForAccount) => {\r\n      let testIndex = allTests.backendSavedTests.map(t => t.testId).indexOf(test.testId)\r\n\r\n      if(testIndex === -1){\r\n        return;\r\n      }\r\n      allTests.backendSavedTests[testIndex].isChecked = !test.isChecked\r\n      dispatch(getTestsAction(allTests)) \r\n    }\r\n\r\n    const addParticipant = () => {\r\n        setParticipant([...participantState, {...blankParticipant}]);\r\n      };\r\n\r\n    const participantFirstNameUpdated = (index: number, firstName: string) => {\r\n        participantState[index].firstName = firstName;\r\n        setParticipant(participantState)\r\n      };\r\n\r\n    const participantLastNameUpdated = (index: number, lastName: string) => {\r\n        participantState[index].lastName = lastName;\r\n        setParticipant(participantState)\r\n      };\r\n\r\n    const participantEmailAddressUpdated = (index: number, emailAddress: string) => {\r\n        participantState[index].emailAddress = emailAddress;\r\n        setParticipant(participantState)\r\n      };\r\n\r\n    const isNotAuthorized = !loginData.isValid || loginData.accountDetails.accountType !== AccountDetailsAccountTypeEnum.Researcher\r\n\r\n    const onSubmit = (data: IProjectTitle) => {\r\n        if(isNotAuthorized){\r\n            return;\r\n        }\r\n\r\n        let selectedTests = allTests.backendSavedTests.filter(test => test.isChecked)\r\n\r\n        if(selectedTests.length === 0){\r\n          setTestsSelected(false)\r\n          return;\r\n        }\r\n        setTestsSelected(true)\r\n\r\n        if(incorrectParticipants(participantState).length > 0){\r\n          setParticipant(participantState)\r\n          return;\r\n        } \r\n\r\n        setParticipant(participantState)\r\n\r\n        const createProject: CreateProject = {\r\n          projectTitle: data.projectTitle,\r\n          participants: participantState.filter(p => p.emailAddress),\r\n          tests: selectedTests.map(s => s.testId)\r\n        };\r\n\r\n        (async () => {\r\n    \r\n          const projectData = await api.createsNewProject(loginData.accountDetails.accountID, createProject)\r\n            .catch(e => {\r\n              console.log(e)\r\n              return e\r\n            })\r\n    \r\n          if(projectData.status !== 200){\r\n            return;\r\n          }\r\n    \r\n          history.push(nl.overviewScreen);      \r\n          reset();\r\n        })();\r\n        \r\n    }\r\n    \r\n\r\n    if(isNotAuthorized){\r\n        return(\r\n            <h1>Unauthorized</h1>\r\n        );    \r\n    }\r\n\r\n    if(allTests.backendSavedTests.length === 0){\r\n        return(\r\n            <h1>Uh oh, something went wrong</h1>\r\n        );\r\n    } else {\r\n        return(\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div>\r\n                <label>Project title:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"projectTitle\"\r\n                  name=\"projectTitle\"\r\n                  ref={register({required: true})}\r\n                />\r\n                {errors.projectTitle && errors.projectTitle.type === \"required\" && (\r\n                <div className=\"error\">You must enter the title of the project.</div>)}\r\n              </div>\r\n              <div>\r\n                <input type=\"button\" value=\"Add Participant\" onClick={addParticipant} />      \r\n                {\r\n                  /// I Need to update the participants\r\n                    participantState.map((participant, index) => {\r\n                    return (\r\n                        <div key={`participant-${index}`}>\r\n                        <label>first name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name={participant.firstName}\r\n                            data-idx={participant.firstName}\r\n                            id={participant.firstName}\r\n                            className=\"firstname\"\r\n                            onChange={(e) => participantFirstNameUpdated(index, e.target.value )}\r\n                        />\r\n                        <label>Last name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name={participant.lastName}\r\n                            data-idx={participant.lastName}\r\n                            id={participant.lastName}\r\n                            className=\"lastname\"\r\n                            onChange={(e) => participantLastNameUpdated(index, e.target.value )}\r\n                        />\r\n                        <label>email address</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name={participant.emailAddress}\r\n                            data-idx={participant.emailAddress}\r\n                            id={participant.emailAddress}\r\n                            className=\"emailAddress\"\r\n                            onChange={(e) => participantEmailAddressUpdated(index, e.target.value )}\r\n                        />\r\n                        {participant.isCorrect ? null : <label>Participant is incorrect</label>}                        \r\n                        </div>\r\n                    );      \r\n                    })\r\n                }\r\n              </div>\r\n              <div>\r\n                  {allTests.backendSavedTests.map(test => \r\n                  <label>{test.testName} \r\n                    <input \r\n                      type=\"checkbox\" \r\n                      name={test.testName} \r\n                      onChange={() => checkboxChange(test)}\r\n                      key={test.testId}/>\r\n                  </label>)}\r\n                  {hasTestsSeleted ? null : <label>Select at least one test</label>}                      \r\n              </div>\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nfunction incorrectParticipants(participants: INewParticipant[]): number[] {\r\n  participants.forEach(p =>{\r\n    p.isCorrect = !(!completeRowIsEmpty(p) && !completeRowCorrect(p))\r\n  })\r\n\r\n  return participants.map((p, index) => !p.isCorrect ? index : -1).filter(p => p > -1)\r\n}\r\n\r\nfunction completeRowIsEmpty(p: INewParticipant): Boolean {\r\n  return p.emailAddress?.trim().length === 0 &&\r\n   p.firstName?.trim().length === 0 &&\r\n   p.lastName?.trim().length === 0\r\n}\r\n\r\nfunction completeRowCorrect(p: INewParticipant): Boolean {\r\n  \r\n  let isValidFirstName = p.firstName.trim().length !== 0 && !/[^a-zA-Z]/.test(p.firstName)\r\n  let isValidLastName = p.lastName.trim().length !== 0  && !/[^a-zA-Z]/.test(p.lastName)\r\n  let isValidEmailAddress = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,253}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,253}[a-zA-Z0-9])?)*$\").test(p.emailAddress)\r\n  return isValidFirstName && isValidLastName && isValidEmailAddress\r\n}\r\n\r\n","C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\GenericTestScreen\\index.tsx",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\store.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\configuration.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\login.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\index.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\login.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\api.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\login.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\api\\base.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getTests.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getTests.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getTests.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getProjectsOfParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getProjectsOfParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getProjectsOfParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\views\\ProjectsOverviewParticipantScreen\\index.tsx",["135"],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\reducers\\getTestsOfProjectParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\types\\getTestsOfProjectParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\redux\\actions\\getTestsOfProjectParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allTestsOfProjectParticipant.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allTestsForResearcher.ts",[],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\AllProjectsForParticipant.ts",["136"],"C:\\Users\\markw\\Documents\\eutychia\\dev\\eutychia-webapp\\src\\services\\viewmodels\\allProjectsForParticipant.ts",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":217,"column":124,"nodeType":"143","messageId":"144","endLine":217,"endColumn":125,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":25,"column":38,"nodeType":"148","messageId":"149","endLine":25,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":2,"column":36,"nodeType":"152","messageId":"153","endLine":2,"endColumn":56},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["156","157"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'ProjectOfParticipant' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"158","fix":"159","desc":"160"},{"messageId":"161","fix":"162","desc":"163"},"removeEscape",{"range":"164","text":"165"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"166","text":"167"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[8049,8050],"",[8049,8049],"\\"]